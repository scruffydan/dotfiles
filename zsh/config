############
## Prompt ##
############
# Enable colors
autoload -U colors
colors

# Enable advanced prompt support
autoload -U promptinit 
promptinit
# Enable colors
autoload -U colors
colors

# Updates editor information when the keymap changes.
function zle-keymap-select() {
  zle reset-prompt
  zle -R
}

zle -N zle-keymap-select

function vi_mode_prompt_info() {
  echo "${${KEYMAP/vicmd/[vi] }/(main|viins)/}"
}

# Turn on and configure the version control system information
autoload -Uz vcs_info
precmd () { vcs_info }
zstyle ':vcs_info:*' get-revision true
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' formats "%{$fg[blue]%}%b:%{$fg[green]%}%.7i%{$reset_color%}"


# Update the command prompt
PROMPT='
%{$fg[red]%}$(vi_mode_prompt_info)%{$fg[green]%}%n@%{$fg[yellow]%}%m%{$fg[green]%}:%~%{$reset_color%}
$ ' 
RPROMPT='${vcs_info_msg_0_}'

############
## Colors ##
############
# Customize the colors of ls

### OSX and BSD use LSCOLORS
# The value of this variable describes what color to use for which attribute when colors are enabled with CLICOLOR.  This string is a concatenation of pairs of the format fb, where f is the foreground color and b is the background color.
#
# The color designators are as follows:
# a     black
# b     red
# c     green
# d     brown (acctually ANSI yellow)
# e     blue
# f     magenta
# g     cyan
# h     light grey
# A     bold black, usually shows up as dark grey
# B     bold red
# C     bold green
# D     bold brown, usually shows up as yellow
# E     bold blue
# F     bold magenta
# G     bold cyan
# H     bold light grey; looks like bright white
# x     default foreground or background
# 
# Note that the above are standard ANSI colors.  The actual display may differ depending on the color capabilities of the terminal in use.
# 
# The order of the attributes are as follows:
# 1.    directory
# 2.    symbolic link
# 3.    socket
# 4.    pipe
# 5.    executable
# 6.    block special
# 7.    character special
# 8.    executable with setuid bit set
# 9.    executable with setgid bit set
# 10.   directory writable to others, with sticky bit
# 11.   directory writable to others, without sticky bit
# 
# For OSX The default is "exfxcxdxbxegedabagacad"
export LSCOLORS=cxgxcxdxbxegedabagacad

### Linux Uses LS _COLORS
# The parameters for LS_COLORS (di, fi, ln, pi, etc) refer to different file types:
# di   Directory
# fi   File
# ln   Symbolic Link
# pi   Fifo file
# so   Socket file
# bd   Block (buffered) special file
# cd   Character (unbuffered) special file
# or   Symbolic Link pointing to a non-existent file (orphan)
# mi   Non-existent file pointed to by a symbolic link (visible when you type ls -l)
# ex   File which is executable (ie. has 'x' set in permissions).
# 
# Color codes
# 0   =   Default Colour
# 1   =   Bold
# 4   =   Underlined
# 5   =   Flashing Text
# 7   =   Reverse Field
# 31  =   Red
# 32  =   Green
# 34  =   Blue
# 35  =   Magenta
# 36  =   Cyan
# 40  =   Black Background
# 41  =   Red Background
# 42  =   Green Background
# 44  =   Blue Background
# 46  =   Cyan Background
# 93  =   Yellow
# 103 =   Yellow Background
# 
# There is no default for Linux
export LS_COLORS="di=00;32:ln=00;36:ex=00;31"

# Make ls use LSCOLORS or LS_COLORS
if [[ $(uname) == Linux ]]; then
    alias ls="ls --color=always -F"
else
    alias ls="ls -GF"
fi

##############
## Settings ##
##############
# Enable forward delete
bindkey "^[[3~" delete-char

#History
export HISTSIZE=25000
export HISTFILE=~/.history
export SAVEHIST=25000
setopt APPEND_HISTORY
setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt HIST_SAVE_NO_DUPS
setopt HIST_VERIFY
setopt HIST_find_no_dups
setopt share_history

# Enable Vi Bindings
bindkey -v
# Make Vi mode transitions faster (KEYTIMEOUT is in hundredths of a second)
export KEYTIMEOUT=1

# Enable command substitution
setopt prompt_subst

# Enable Advanced Tab-completion
autoload -U compinit 
compinit
setopt completealiases

# Enable Zsh spelling correction
setopt CORRECT

# Bind smart history search to up and down arrows
autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "\e[A" history-beginning-search-backward-end
bindkey "\e[B" history-beginning-search-forward-end
bindkey "^[[A" history-beginning-search-backward-end
bindkey "^[[B" history-beginning-search-forward-end
[[ -n "${key[Up]}"      ]] && bindkey "${key[Up]}"      history-beginning-search-backward-end
[[ -n "${key[Down]}"    ]] && bindkey "${key[Down]}"    history-beginning-search-forward-end

#######################
## Syntax highliting ##
#######################

source ~/dotfiles/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)

######################
## Auto Suggestions ##
######################

#source ~/dotfiles/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
#ZSH_AUTOSUGGEST_STRATEGY=(completion)
#ZSH_AUTOSUGGEST_USE_ASYNC=YES
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#75715E"

# Have commands starting with `rm -rf` in red:
ZSH_HIGHLIGHT_PATTERNS+=('rm -rf *' 'fg=white,bold,bg=red')

# Define styles for nested brackets up to level 4
ZSH_HIGHLIGHT_STYLES[bracket-level-1]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-2]='fg=red,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-3]='fg=yellow,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-4]='fg=magenta,bold'


#####################
## Man page colors ##
#####################
export LESS_TERMCAP_mb=$'\e[1;32m' #Green
export LESS_TERMCAP_md=$'\e[1;32m' #Green
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[0m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\e[1;31m' #Red
